import type { Command } from "commander";
import type { NpmOutdatedResponse, RefinePackageInstalledVersionData } from "@definitions/package";
declare const load: (program: Command) => Command;
/**
 *
 * @returns `Refine` packages that have updates.
 * @returns `[]` if no Refine package found.
 * @returns `[]` if all `Refine` packages are up to date.
 */
export declare const isRefineUptoDate: () => Promise<RefinePackageInstalledVersionData[]>;
/**
 * Uses `npm outdated` command to get the list of outdated packages.
 * @returns `[]` if no Refine package found.
 * @returns `Refine` packages that have updates.
 */
export declare const getOutdatedRefinePackages: () => Promise<RefinePackageInstalledVersionData[]>;
/**
 * @returns `npm outdated` command response
 */
export declare const getOutdatedPackageList: () => Promise<NpmOutdatedResponse | null>;
/**
 * The `npm outdated` command's `wanted` field shows the desired update version (e.g., `^1.2.0` in `package.json` resolves to `1.2.1`).
 * This function returns the version that matches the semver range in `package.json` (e.g., `^1.2.0` resolves to `^1.2.1`).
 *
 * @param packageName The name of the package.
 * @param versionWanted The version that the user wants to update to. Wihtout semver range.
 * @returns The version that satisfies the semver range in `package.json` with the preferred wildcard.
 */
export declare const getWantedWithPreferredWildcard: (packageName: RefinePackageInstalledVersionData["name"], versionWanted: RefinePackageInstalledVersionData["wanted"]) => string;
/**
 *
 * @param packageName to get the latest minor version of the package available on npm.
 * @param version current installed version of the package. This will be used to calculate the latest minor version.
 * @returns The latest minor version of the package available on npm.
 */
export declare const getLatestMinorVersionOfPackage: (packageName: RefinePackageInstalledVersionData["name"], version: RefinePackageInstalledVersionData["wanted"]) => Promise<string>;
export default load;
//# sourceMappingURL=index.d.ts.map